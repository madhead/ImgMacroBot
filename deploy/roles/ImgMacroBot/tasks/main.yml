- name: Ensure the service is stopped
  ansible.builtin.systemd:
    name: '{{ bot.service }}'
    state: stopped
  ignore_errors: yes

- name: Ensure service account exists
  ansible.builtin.user:
    name: '{{ bot.user }}'
    state: present
    system: true
    create_home: false

- name: Clear service directory
  ansible.builtin.file:
    path: '{{ bot.directory }}'
    state: absent
- name: Create service directory
  ansible.builtin.file:
    path: '{{ bot.directory }}'
    owner: '{{ bot.user }}'
    group: '{{ bot.user }}'
    state: directory
    mode: 0755
- name: Create templates directory
  ansible.builtin.file:
    path: '{{ bot.directory }}/templates'
    owner: '{{ bot.user }}'
    group: '{{ bot.user }}'
    state: directory
    mode: 0755
- name: Copy service artifact
  ansible.builtin.unarchive:
    remote_src: false
    src: '{{ playbook_dir }}/../runners/ktor/build/distributions/ImgMacroBot.tar'
    dest: '{{ bot.directory }}'
    extra_opts:
      - --strip-components=1
    owner: '{{ bot.user }}'
    group: '{{ bot.user }}'
- name: Copy templates
  ansible.builtin.copy:
    remote_src: false
    src: '{{ playbook_dir }}/../templates/'
    dest: '{{ bot.directory }}/templates'
    owner: '{{ bot.user }}'
    group: '{{ bot.user }}'
    mode: 0444

- name: Ensure service environment
  ansible.builtin.template:
    src: '{{ bot.config }}.j2'
    dest: /etc/{{ bot.config }}
    owner: '{{ bot.user }}'
    group: '{{ bot.user }}'
    mode: 0644
- name: Ensure service unit
  ansible.builtin.template:
    src: '{{ bot.service }}.j2'
    dest: /etc/systemd/system/{{ bot.service }}
    owner: '{{ bot.user }}'
    group: '{{ bot.user }}'
    mode: 0644

- name: Ensure the service is started
  ansible.builtin.systemd:
    name: '{{ bot.service }}'
    state: started
    enabled: yes
    daemon_reload: true

- name: Allow incoming connections on TCP port 443 (HTTPS)
  ansible.builtin.iptables:
    chain: INPUT
    action: insert
    rule_num: '6'
    ctstate: NEW
    protocol: tcp
    destination_port: '443'
    jump: ACCEPT
  notify:
    - Persist iptables

- name: Ensure PKI directory
  ansible.builtin.file:
    path: '{{ pki.directory }}'
    owner: root
    group: root
    state: directory
    mode: 0755
- name: Ensure private key
  community.crypto.openssl_privatekey:
    type: RSA
    size: 4096
    path: '{{ pki.directory }}/{{ public_ip }}.pem'
- name: Ensure OpenSSL CSR
  community.crypto.openssl_csr:
    subject:
      O: ImgMacroBot
      CN: '{{ public_ip }}'
    privatekey_path: '{{ pki.directory }}/{{ public_ip }}.pem'
    path: '{{ pki.directory }}/{{ public_ip }}.csr'
- name: Ensure host certificate
  community.crypto.x509_certificate:
    privatekey_path: '{{ pki.directory }}/{{ public_ip }}.pem'
    csr_path: '{{ pki.directory }}/{{ public_ip }}.csr'
    provider: selfsigned
    path: '{{ pki.directory }}/{{ public_ip }}.crt'

- name: Ensure NGINX location
  ansible.builtin.template:
    src: ImgMacroBot.locations.j2
    dest: /etc/nginx/conf.d/ImgMacroBot.locations
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart NGINX

- name: Ensure NGINX config
  ansible.builtin.template:
    src: bots.conf.j2
    dest: /etc/nginx/conf.d/bots.conf
    owner: root
    group: root
    mode: 0644
  notify:
    - Restart NGINX
